// Mocks generated by Mockito 5.3.2 from annotations
// in suggest_a_feature/test/utils/shared_mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i10;
import 'dart:ui' as _i6;

import 'package:flutter/material.dart' as _i7;
import 'package:flutter_bloc/flutter_bloc.dart' as _i15;
import 'package:mockito/mockito.dart' as _i1;
import 'package:suggest_a_feature/src/data/interfaces/i_suggestions_data_source.dart'
    as _i17;
import 'package:suggest_a_feature/src/data/repositories/suggestion_repository.dart'
    as _i9;
import 'package:suggest_a_feature/src/domain/entities/comment.dart' as _i3;
import 'package:suggest_a_feature/src/domain/entities/suggestion.dart' as _i2;
import 'package:suggest_a_feature/src/domain/entities/suggestion_author.dart'
    as _i11;
import 'package:suggest_a_feature/src/domain/interactors/suggestion_interactor.dart'
    as _i12;
import 'package:suggest_a_feature/src/presentation/pages/suggestion/suggestion_cubit.dart'
    as _i13;
import 'package:suggest_a_feature/src/presentation/pages/suggestion/suggestion_state.dart'
    as _i4;
import 'package:suggest_a_feature/src/presentation/pages/suggestions/suggestions_cubit.dart'
    as _i16;
import 'package:suggest_a_feature/src/presentation/pages/suggestions/suggestions_state.dart'
    as _i5;
import 'package:suggest_a_feature/src/presentation/pages/theme/suggestions_theme.dart'
    as _i8;
import 'package:suggest_a_feature/src/presentation/utils/typedefs.dart' as _i14;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSuggestion_0 extends _i1.SmartFake implements _i2.Suggestion {
  _FakeSuggestion_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeComment_1 extends _i1.SmartFake implements _i3.Comment {
  _FakeComment_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSuggestionState_2 extends _i1.SmartFake
    implements _i4.SuggestionState {
  _FakeSuggestionState_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSuggestionsState_3 extends _i1.SmartFake
    implements _i5.SuggestionsState {
  _FakeSuggestionsState_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeColor_4 extends _i1.SmartFake implements _i6.Color {
  _FakeColor_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTextStyle_5 extends _i1.SmartFake implements _i7.TextStyle {
  _FakeTextStyle_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i7.DiagnosticLevel? minLevel = _i7.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeSuggestionsTheme_6 extends _i1.SmartFake
    implements _i8.SuggestionsTheme {
  _FakeSuggestionsTheme_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SuggestionRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSuggestionRepository extends _i1.Mock
    implements _i9.SuggestionRepository {
  MockSuggestionRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Stream<List<_i2.Suggestion>> get suggestionsStream =>
      (super.noSuchMethod(
        Invocation.getter(#suggestionsStream),
        returnValue: _i10.Stream<List<_i2.Suggestion>>.empty(),
      ) as _i10.Stream<List<_i2.Suggestion>>);
  @override
  List<_i2.Suggestion> get suggestions => (super.noSuchMethod(
        Invocation.getter(#suggestions),
        returnValue: <_i2.Suggestion>[],
      ) as List<_i2.Suggestion>);
  @override
  Map<String, _i11.SuggestionAuthor?> get userInfo => (super.noSuchMethod(
        Invocation.getter(#userInfo),
        returnValue: <String, _i11.SuggestionAuthor?>{},
      ) as Map<String, _i11.SuggestionAuthor?>);
  @override
  void refreshSuggestions(
    _i2.Suggestion? suggestion, {
    bool? saveComments = true,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #refreshSuggestions,
          [suggestion],
          {#saveComments: saveComments},
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i10.Future<void> initSuggestions() => (super.noSuchMethod(
        Invocation.method(
          #initSuggestions,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<_i2.Suggestion> getSuggestionById(String? suggestionId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSuggestionById,
          [suggestionId],
        ),
        returnValue: _i10.Future<_i2.Suggestion>.value(_FakeSuggestion_0(
          this,
          Invocation.method(
            #getSuggestionById,
            [suggestionId],
          ),
        )),
      ) as _i10.Future<_i2.Suggestion>);
  @override
  _i10.Future<_i2.Suggestion> createSuggestion(
          _i2.CreateSuggestionModel? suggestion) =>
      (super.noSuchMethod(
        Invocation.method(
          #createSuggestion,
          [suggestion],
        ),
        returnValue: _i10.Future<_i2.Suggestion>.value(_FakeSuggestion_0(
          this,
          Invocation.method(
            #createSuggestion,
            [suggestion],
          ),
        )),
      ) as _i10.Future<_i2.Suggestion>);
  @override
  _i10.Future<_i2.Suggestion> updateSuggestion(_i2.Suggestion? suggestion) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSuggestion,
          [suggestion],
        ),
        returnValue: _i10.Future<_i2.Suggestion>.value(_FakeSuggestion_0(
          this,
          Invocation.method(
            #updateSuggestion,
            [suggestion],
          ),
        )),
      ) as _i10.Future<_i2.Suggestion>);
  @override
  _i10.Future<void> deleteSuggestion(String? suggestionId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteSuggestion,
          [suggestionId],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> addNotifyToUpdateUser(String? suggestionId) =>
      (super.noSuchMethod(
        Invocation.method(
          #addNotifyToUpdateUser,
          [suggestionId],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> deleteNotifyToUpdateUser(String? suggestionId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteNotifyToUpdateUser,
          [suggestionId],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> downvote(String? suggestionId) => (super.noSuchMethod(
        Invocation.method(
          #downvote,
          [suggestionId],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> upvote(String? suggestionId) => (super.noSuchMethod(
        Invocation.method(
          #upvote,
          [suggestionId],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<List<_i3.Comment>> getAllComments(String? suggestionId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllComments,
          [suggestionId],
        ),
        returnValue: _i10.Future<List<_i3.Comment>>.value(<_i3.Comment>[]),
      ) as _i10.Future<List<_i3.Comment>>);
  @override
  _i10.Future<_i3.Comment> createComment(_i3.CreateCommentModel? comment) =>
      (super.noSuchMethod(
        Invocation.method(
          #createComment,
          [comment],
        ),
        returnValue: _i10.Future<_i3.Comment>.value(_FakeComment_1(
          this,
          Invocation.method(
            #createComment,
            [comment],
          ),
        )),
      ) as _i10.Future<_i3.Comment>);
}

/// A class which mocks [SuggestionInteractor].
///
/// See the documentation for Mockito's code generation for more information.
class MockSuggestionInteractor extends _i1.Mock
    implements _i12.SuggestionInteractor {
  MockSuggestionInteractor() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.Stream<List<_i2.Suggestion>> get suggestionsStream =>
      (super.noSuchMethod(
        Invocation.getter(#suggestionsStream),
        returnValue: _i10.Stream<List<_i2.Suggestion>>.empty(),
      ) as _i10.Stream<List<_i2.Suggestion>>);
  @override
  Map<String, _i11.SuggestionAuthor?> get userInfo => (super.noSuchMethod(
        Invocation.getter(#userInfo),
        returnValue: <String, _i11.SuggestionAuthor?>{},
      ) as Map<String, _i11.SuggestionAuthor?>);
  @override
  void initSuggestions() => super.noSuchMethod(
        Invocation.method(
          #initSuggestions,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i10.Future<_i2.Suggestion> createSuggestion(
          _i2.CreateSuggestionModel? suggestion) =>
      (super.noSuchMethod(
        Invocation.method(
          #createSuggestion,
          [suggestion],
        ),
        returnValue: _i10.Future<_i2.Suggestion>.value(_FakeSuggestion_0(
          this,
          Invocation.method(
            #createSuggestion,
            [suggestion],
          ),
        )),
      ) as _i10.Future<_i2.Suggestion>);
  @override
  _i10.Future<_i2.Suggestion> updateSuggestion(_i2.Suggestion? suggestion) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSuggestion,
          [suggestion],
        ),
        returnValue: _i10.Future<_i2.Suggestion>.value(_FakeSuggestion_0(
          this,
          Invocation.method(
            #updateSuggestion,
            [suggestion],
          ),
        )),
      ) as _i10.Future<_i2.Suggestion>);
  @override
  _i10.Future<void> deleteSuggestion(String? suggestionId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteSuggestion,
          [suggestionId],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  void upvote(String? suggestionId) => super.noSuchMethod(
        Invocation.method(
          #upvote,
          [suggestionId],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void downvote(String? suggestionId) => super.noSuchMethod(
        Invocation.method(
          #downvote,
          [suggestionId],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i10.Future<void> addNotifyToUpdateUser(String? suggestionId) =>
      (super.noSuchMethod(
        Invocation.method(
          #addNotifyToUpdateUser,
          [suggestionId],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> deleteNotifyToUpdateUser(String? suggestionId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteNotifyToUpdateUser,
          [suggestionId],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  void refreshSuggestions(
    _i2.Suggestion? suggestion, {
    bool? saveComments = false,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #refreshSuggestions,
          [suggestion],
          {#saveComments: saveComments},
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i10.Future<List<_i3.Comment>> getAllComments(String? suggestionId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllComments,
          [suggestionId],
        ),
        returnValue: _i10.Future<List<_i3.Comment>>.value(<_i3.Comment>[]),
      ) as _i10.Future<List<_i3.Comment>>);
  @override
  _i10.Future<_i3.Comment> createComment(_i3.CreateCommentModel? comment) =>
      (super.noSuchMethod(
        Invocation.method(
          #createComment,
          [comment],
        ),
        returnValue: _i10.Future<_i3.Comment>.value(_FakeComment_1(
          this,
          Invocation.method(
            #createComment,
            [comment],
          ),
        )),
      ) as _i10.Future<_i3.Comment>);
}

/// A class which mocks [SuggestionCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockSuggestionCubit extends _i1.Mock implements _i13.SuggestionCubit {
  MockSuggestionCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.SuggestionState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeSuggestionState_2(
          this,
          Invocation.getter(#state),
        ),
      ) as _i4.SuggestionState);
  @override
  _i10.Stream<_i4.SuggestionState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i10.Stream<_i4.SuggestionState>.empty(),
      ) as _i10.Stream<_i4.SuggestionState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  _i10.Future<void> init(
    _i2.Suggestion? suggestion,
    _i14.OnGetUserById? getUserById,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #init,
          [
            suggestion,
            getUserById,
          ],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void reset() => super.noSuchMethod(
        Invocation.method(
          #reset,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void openCreateEditBottomSheet() => super.noSuchMethod(
        Invocation.method(
          #openCreateEditBottomSheet,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void openConfirmationBottomSheet() => super.noSuchMethod(
        Invocation.method(
          #openConfirmationBottomSheet,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void openEditDeleteBottomSheet() => super.noSuchMethod(
        Invocation.method(
          #openEditDeleteBottomSheet,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void openNotificationBottomSheet() => super.noSuchMethod(
        Invocation.method(
          #openNotificationBottomSheet,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void openCreateCommentBottomSheet() => super.noSuchMethod(
        Invocation.method(
          #openCreateCommentBottomSheet,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void closeBottomSheet() => super.noSuchMethod(
        Invocation.method(
          #closeBottomSheet,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i10.Future<void> showSavingResultMessage(_i10.Future<bool?>? isSuccess) =>
      (super.noSuchMethod(
        Invocation.method(
          #showSavingResultMessage,
          [isSuccess],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> createComment(
    String? text,
    bool? isAnonymous,
    _i14.OnGetUserById? getUserById,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createComment,
          [
            text,
            isAnonymous,
            getUserById,
          ],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> deleteSuggestion() => (super.noSuchMethod(
        Invocation.method(
          #deleteSuggestion,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  void vote() => super.noSuchMethod(
        Invocation.method(
          #vote,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i10.Future<void> changeNotification(bool? isNotificationOn) =>
      (super.noSuchMethod(
        Invocation.method(
          #changeNotification,
          [isNotificationOn],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  void emit(_i4.SuggestionState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i15.Change<_i4.SuggestionState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i10.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
}

/// A class which mocks [SuggestionsCubit].
///
/// See the documentation for Mockito's code generation for more information.
class MockSuggestionsCubit extends _i1.Mock implements _i16.SuggestionsCubit {
  MockSuggestionsCubit() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.SuggestionsState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeSuggestionsState_3(
          this,
          Invocation.getter(#state),
        ),
      ) as _i5.SuggestionsState);
  @override
  _i10.Stream<_i5.SuggestionsState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i10.Stream<_i5.SuggestionsState>.empty(),
      ) as _i10.Stream<_i5.SuggestionsState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  void init() => super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void vote(
    _i2.SuggestionStatus? status,
    int? i,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #vote,
          [
            status,
            i,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void openCreateBottomSheet() => super.noSuchMethod(
        Invocation.method(
          #openCreateBottomSheet,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void closeCreateBottomSheet() => super.noSuchMethod(
        Invocation.method(
          #closeCreateBottomSheet,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void changeActiveTab(_i2.SuggestionStatus? activeTab) => super.noSuchMethod(
        Invocation.method(
          #changeActiveTab,
          [activeTab],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void emit(_i5.SuggestionsState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onChange(_i15.Change<_i5.SuggestionsState>? change) =>
      super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i10.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
}

/// A class which mocks [SuggestionsDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockSuggestionsDataSource extends _i1.Mock
    implements _i17.SuggestionsDataSource {
  MockSuggestionsDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get userId => (super.noSuchMethod(
        Invocation.getter(#userId),
        returnValue: '',
      ) as String);
  @override
  _i10.Future<_i2.Suggestion> createSuggestion(
          _i2.CreateSuggestionModel? suggestion) =>
      (super.noSuchMethod(
        Invocation.method(
          #createSuggestion,
          [suggestion],
        ),
        returnValue: _i10.Future<_i2.Suggestion>.value(_FakeSuggestion_0(
          this,
          Invocation.method(
            #createSuggestion,
            [suggestion],
          ),
        )),
      ) as _i10.Future<_i2.Suggestion>);
  @override
  _i10.Future<_i2.Suggestion> getSuggestionById(String? suggestionId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSuggestionById,
          [suggestionId],
        ),
        returnValue: _i10.Future<_i2.Suggestion>.value(_FakeSuggestion_0(
          this,
          Invocation.method(
            #getSuggestionById,
            [suggestionId],
          ),
        )),
      ) as _i10.Future<_i2.Suggestion>);
  @override
  _i10.Future<List<_i2.Suggestion>> getAllSuggestions() => (super.noSuchMethod(
        Invocation.method(
          #getAllSuggestions,
          [],
        ),
        returnValue:
            _i10.Future<List<_i2.Suggestion>>.value(<_i2.Suggestion>[]),
      ) as _i10.Future<List<_i2.Suggestion>>);
  @override
  _i10.Future<_i2.Suggestion> updateSuggestion(_i2.Suggestion? suggestion) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSuggestion,
          [suggestion],
        ),
        returnValue: _i10.Future<_i2.Suggestion>.value(_FakeSuggestion_0(
          this,
          Invocation.method(
            #updateSuggestion,
            [suggestion],
          ),
        )),
      ) as _i10.Future<_i2.Suggestion>);
  @override
  _i10.Future<void> deleteSuggestionById(String? suggestionId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteSuggestionById,
          [suggestionId],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<_i3.Comment> createComment(_i3.CreateCommentModel? comment) =>
      (super.noSuchMethod(
        Invocation.method(
          #createComment,
          [comment],
        ),
        returnValue: _i10.Future<_i3.Comment>.value(_FakeComment_1(
          this,
          Invocation.method(
            #createComment,
            [comment],
          ),
        )),
      ) as _i10.Future<_i3.Comment>);
  @override
  _i10.Future<List<_i3.Comment>> getAllComments(String? suggestionId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllComments,
          [suggestionId],
        ),
        returnValue: _i10.Future<List<_i3.Comment>>.value(<_i3.Comment>[]),
      ) as _i10.Future<List<_i3.Comment>>);
  @override
  _i10.Future<void> deleteCommentById(String? commentId) => (super.noSuchMethod(
        Invocation.method(
          #deleteCommentById,
          [commentId],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> upvote(String? suggestionId) => (super.noSuchMethod(
        Invocation.method(
          #upvote,
          [suggestionId],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> downvote(String? suggestionId) => (super.noSuchMethod(
        Invocation.method(
          #downvote,
          [suggestionId],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> addNotifyToUpdateUser(String? suggestionId) =>
      (super.noSuchMethod(
        Invocation.method(
          #addNotifyToUpdateUser,
          [suggestionId],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> deleteNotifyToUpdateUser(String? suggestionId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteNotifyToUpdateUser,
          [suggestionId],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
}

/// A class which mocks [SuggestionsTheme].
///
/// See the documentation for Mockito's code generation for more information.
class MockSuggestionsTheme extends _i1.Mock implements _i8.SuggestionsTheme {
  MockSuggestionsTheme() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Color get primaryBackgroundColor => (super.noSuchMethod(
        Invocation.getter(#primaryBackgroundColor),
        returnValue: _FakeColor_4(
          this,
          Invocation.getter(#primaryBackgroundColor),
        ),
      ) as _i6.Color);
  @override
  _i6.Color get secondaryBackgroundColor => (super.noSuchMethod(
        Invocation.getter(#secondaryBackgroundColor),
        returnValue: _FakeColor_4(
          this,
          Invocation.getter(#secondaryBackgroundColor),
        ),
      ) as _i6.Color);
  @override
  _i6.Color get thirdBackgroundColor => (super.noSuchMethod(
        Invocation.getter(#thirdBackgroundColor),
        returnValue: _FakeColor_4(
          this,
          Invocation.getter(#thirdBackgroundColor),
        ),
      ) as _i6.Color);
  @override
  _i6.Color get bottomSheetBackgroundColor => (super.noSuchMethod(
        Invocation.getter(#bottomSheetBackgroundColor),
        returnValue: _FakeColor_4(
          this,
          Invocation.getter(#bottomSheetBackgroundColor),
        ),
      ) as _i6.Color);
  @override
  String get fontFamily => (super.noSuchMethod(
        Invocation.getter(#fontFamily),
        returnValue: '',
      ) as String);
  @override
  _i6.Color get primaryTextColor => (super.noSuchMethod(
        Invocation.getter(#primaryTextColor),
        returnValue: _FakeColor_4(
          this,
          Invocation.getter(#primaryTextColor),
        ),
      ) as _i6.Color);
  @override
  _i6.Color get secondaryTextColor => (super.noSuchMethod(
        Invocation.getter(#secondaryTextColor),
        returnValue: _FakeColor_4(
          this,
          Invocation.getter(#secondaryTextColor),
        ),
      ) as _i6.Color);
  @override
  _i6.Color get primaryIconColor => (super.noSuchMethod(
        Invocation.getter(#primaryIconColor),
        returnValue: _FakeColor_4(
          this,
          Invocation.getter(#primaryIconColor),
        ),
      ) as _i6.Color);
  @override
  _i6.Color get secondaryIconColor => (super.noSuchMethod(
        Invocation.getter(#secondaryIconColor),
        returnValue: _FakeColor_4(
          this,
          Invocation.getter(#secondaryIconColor),
        ),
      ) as _i6.Color);
  @override
  _i6.Color get actionColor => (super.noSuchMethod(
        Invocation.getter(#actionColor),
        returnValue: _FakeColor_4(
          this,
          Invocation.getter(#actionColor),
        ),
      ) as _i6.Color);
  @override
  _i6.Color get actionPressedColor => (super.noSuchMethod(
        Invocation.getter(#actionPressedColor),
        returnValue: _FakeColor_4(
          this,
          Invocation.getter(#actionPressedColor),
        ),
      ) as _i6.Color);
  @override
  _i6.Color get actionBackgroundColor => (super.noSuchMethod(
        Invocation.getter(#actionBackgroundColor),
        returnValue: _FakeColor_4(
          this,
          Invocation.getter(#actionBackgroundColor),
        ),
      ) as _i6.Color);
  @override
  _i6.Color get dividerColor => (super.noSuchMethod(
        Invocation.getter(#dividerColor),
        returnValue: _FakeColor_4(
          this,
          Invocation.getter(#dividerColor),
        ),
      ) as _i6.Color);
  @override
  _i6.Color get dialogBarrierColor => (super.noSuchMethod(
        Invocation.getter(#dialogBarrierColor),
        returnValue: _FakeColor_4(
          this,
          Invocation.getter(#dialogBarrierColor),
        ),
      ) as _i6.Color);
  @override
  _i6.Color get elevatedButtonColor => (super.noSuchMethod(
        Invocation.getter(#elevatedButtonColor),
        returnValue: _FakeColor_4(
          this,
          Invocation.getter(#elevatedButtonColor),
        ),
      ) as _i6.Color);
  @override
  _i6.Color get pressedElevatedButtonColor => (super.noSuchMethod(
        Invocation.getter(#pressedElevatedButtonColor),
        returnValue: _FakeColor_4(
          this,
          Invocation.getter(#pressedElevatedButtonColor),
        ),
      ) as _i6.Color);
  @override
  _i6.Color get elevatedButtonTextColor => (super.noSuchMethod(
        Invocation.getter(#elevatedButtonTextColor),
        returnValue: _FakeColor_4(
          this,
          Invocation.getter(#elevatedButtonTextColor),
        ),
      ) as _i6.Color);
  @override
  _i6.Color get focusedTextButtonColor => (super.noSuchMethod(
        Invocation.getter(#focusedTextButtonColor),
        returnValue: _FakeColor_4(
          this,
          Invocation.getter(#focusedTextButtonColor),
        ),
      ) as _i6.Color);
  @override
  _i6.Color get focusedTextColor => (super.noSuchMethod(
        Invocation.getter(#focusedTextColor),
        returnValue: _FakeColor_4(
          this,
          Invocation.getter(#focusedTextColor),
        ),
      ) as _i6.Color);
  @override
  _i6.Color get focusedTextFieldBorderlineColor => (super.noSuchMethod(
        Invocation.getter(#focusedTextFieldBorderlineColor),
        returnValue: _FakeColor_4(
          this,
          Invocation.getter(#focusedTextFieldBorderlineColor),
        ),
      ) as _i6.Color);
  @override
  _i6.Color get focusedTonalButtonColor => (super.noSuchMethod(
        Invocation.getter(#focusedTonalButtonColor),
        returnValue: _FakeColor_4(
          this,
          Invocation.getter(#focusedTonalButtonColor),
        ),
      ) as _i6.Color);
  @override
  _i6.Color get enabledTextColor => (super.noSuchMethod(
        Invocation.getter(#enabledTextColor),
        returnValue: _FakeColor_4(
          this,
          Invocation.getter(#enabledTextColor),
        ),
      ) as _i6.Color);
  @override
  _i6.Color get disabledTextColor => (super.noSuchMethod(
        Invocation.getter(#disabledTextColor),
        returnValue: _FakeColor_4(
          this,
          Invocation.getter(#disabledTextColor),
        ),
      ) as _i6.Color);
  @override
  _i6.Color get disabledTextButtonColor => (super.noSuchMethod(
        Invocation.getter(#disabledTextButtonColor),
        returnValue: _FakeColor_4(
          this,
          Invocation.getter(#disabledTextButtonColor),
        ),
      ) as _i6.Color);
  @override
  _i6.Color get tonalButtonColor => (super.noSuchMethod(
        Invocation.getter(#tonalButtonColor),
        returnValue: _FakeColor_4(
          this,
          Invocation.getter(#tonalButtonColor),
        ),
      ) as _i6.Color);
  @override
  _i6.Color get errorColor => (super.noSuchMethod(
        Invocation.getter(#errorColor),
        returnValue: _FakeColor_4(
          this,
          Invocation.getter(#errorColor),
        ),
      ) as _i6.Color);
  @override
  _i6.Color get fade => (super.noSuchMethod(
        Invocation.getter(#fade),
        returnValue: _FakeColor_4(
          this,
          Invocation.getter(#fade),
        ),
      ) as _i6.Color);
  @override
  _i6.Color get fabColor => (super.noSuchMethod(
        Invocation.getter(#fabColor),
        returnValue: _FakeColor_4(
          this,
          Invocation.getter(#fabColor),
        ),
      ) as _i6.Color);
  @override
  _i6.Color get upvoteArrowColor => (super.noSuchMethod(
        Invocation.getter(#upvoteArrowColor),
        returnValue: _FakeColor_4(
          this,
          Invocation.getter(#upvoteArrowColor),
        ),
      ) as _i6.Color);
  @override
  _i6.Color get activatedUpvoteArrowColor => (super.noSuchMethod(
        Invocation.getter(#activatedUpvoteArrowColor),
        returnValue: _FakeColor_4(
          this,
          Invocation.getter(#activatedUpvoteArrowColor),
        ),
      ) as _i6.Color);
  @override
  _i6.Color get requestsTabColor => (super.noSuchMethod(
        Invocation.getter(#requestsTabColor),
        returnValue: _FakeColor_4(
          this,
          Invocation.getter(#requestsTabColor),
        ),
      ) as _i6.Color);
  @override
  _i6.Color get inProgressTabColor => (super.noSuchMethod(
        Invocation.getter(#inProgressTabColor),
        returnValue: _FakeColor_4(
          this,
          Invocation.getter(#inProgressTabColor),
        ),
      ) as _i6.Color);
  @override
  _i6.Color get completedTabColor => (super.noSuchMethod(
        Invocation.getter(#completedTabColor),
        returnValue: _FakeColor_4(
          this,
          Invocation.getter(#completedTabColor),
        ),
      ) as _i6.Color);
  @override
  _i6.Color get featureLabelColor => (super.noSuchMethod(
        Invocation.getter(#featureLabelColor),
        returnValue: _FakeColor_4(
          this,
          Invocation.getter(#featureLabelColor),
        ),
      ) as _i6.Color);
  @override
  _i6.Color get bugLabelColor => (super.noSuchMethod(
        Invocation.getter(#bugLabelColor),
        returnValue: _FakeColor_4(
          this,
          Invocation.getter(#bugLabelColor),
        ),
      ) as _i6.Color);
  @override
  _i7.TextStyle get base => (super.noSuchMethod(
        Invocation.getter(#base),
        returnValue: _FakeTextStyle_5(
          this,
          Invocation.getter(#base),
        ),
      ) as _i7.TextStyle);
  @override
  _i7.TextStyle get textSmall => (super.noSuchMethod(
        Invocation.getter(#textSmall),
        returnValue: _FakeTextStyle_5(
          this,
          Invocation.getter(#textSmall),
        ),
      ) as _i7.TextStyle);
  @override
  _i7.TextStyle get textMedium => (super.noSuchMethod(
        Invocation.getter(#textMedium),
        returnValue: _FakeTextStyle_5(
          this,
          Invocation.getter(#textMedium),
        ),
      ) as _i7.TextStyle);
  @override
  _i7.TextStyle get textLarge => (super.noSuchMethod(
        Invocation.getter(#textLarge),
        returnValue: _FakeTextStyle_5(
          this,
          Invocation.getter(#textLarge),
        ),
      ) as _i7.TextStyle);
  @override
  _i7.TextStyle get textSmallPlus => (super.noSuchMethod(
        Invocation.getter(#textSmallPlus),
        returnValue: _FakeTextStyle_5(
          this,
          Invocation.getter(#textSmallPlus),
        ),
      ) as _i7.TextStyle);
  @override
  _i7.TextStyle get textSmallPlusSecondary => (super.noSuchMethod(
        Invocation.getter(#textSmallPlusSecondary),
        returnValue: _FakeTextStyle_5(
          this,
          Invocation.getter(#textSmallPlusSecondary),
        ),
      ) as _i7.TextStyle);
  @override
  _i7.TextStyle get textMediumPlus => (super.noSuchMethod(
        Invocation.getter(#textMediumPlus),
        returnValue: _FakeTextStyle_5(
          this,
          Invocation.getter(#textMediumPlus),
        ),
      ) as _i7.TextStyle);
  @override
  _i7.TextStyle get textMediumBold => (super.noSuchMethod(
        Invocation.getter(#textMediumBold),
        returnValue: _FakeTextStyle_5(
          this,
          Invocation.getter(#textMediumBold),
        ),
      ) as _i7.TextStyle);
  @override
  _i7.TextStyle get textMediumPlusBold => (super.noSuchMethod(
        Invocation.getter(#textMediumPlusBold),
        returnValue: _FakeTextStyle_5(
          this,
          Invocation.getter(#textMediumPlusBold),
        ),
      ) as _i7.TextStyle);
  @override
  _i7.TextStyle get textLargeBold => (super.noSuchMethod(
        Invocation.getter(#textLargeBold),
        returnValue: _FakeTextStyle_5(
          this,
          Invocation.getter(#textLargeBold),
        ),
      ) as _i7.TextStyle);
  @override
  _i7.TextStyle get textSmallPlusBold => (super.noSuchMethod(
        Invocation.getter(#textSmallPlusBold),
        returnValue: _FakeTextStyle_5(
          this,
          Invocation.getter(#textSmallPlusBold),
        ),
      ) as _i7.TextStyle);
  @override
  _i7.TextStyle get textSmallPlusSecondaryBold => (super.noSuchMethod(
        Invocation.getter(#textSmallPlusSecondaryBold),
        returnValue: _FakeTextStyle_5(
          this,
          Invocation.getter(#textSmallPlusSecondaryBold),
        ),
      ) as _i7.TextStyle);
  @override
  _i8.SuggestionsTheme copyWith({
    _i6.Color? primaryBackgroundColor,
    _i6.Color? secondaryBackgroundColor,
    _i6.Color? thirdBackgroundColor,
    _i6.Color? bottomSheetBackgroundColor,
    String? fontFamily,
    _i6.Color? primaryTextColor,
    _i6.Color? secondaryTextColor,
    _i6.Color? primaryIconColor,
    _i6.Color? secondaryIconColor,
    _i6.Color? actionColor,
    _i6.Color? actionPressedColor,
    _i6.Color? actionBackgroundColor,
    _i6.Color? dividerColor,
    _i6.Color? dialogBarrierColor,
    _i6.Color? elevatedButtonColor,
    _i6.Color? pressedElevatedButtonColor,
    _i6.Color? elevatedButtonTextColor,
    _i6.Color? focusedTextButtonColor,
    _i6.Color? focusedTextColor,
    _i6.Color? focusedTextFieldBorderlineColor,
    _i6.Color? focusedTonalButtonColor,
    _i6.Color? enabledTextColor,
    _i6.Color? disabledTextColor,
    _i6.Color? disabledTextButtonColor,
    _i6.Color? tonalButtonColor,
    _i6.Color? errorColor,
    _i6.Color? upvoteArrowColor,
    _i6.Color? activatedUpvoteArrowColor,
    _i6.Color? requestsTabColor,
    _i6.Color? inProgressTabColor,
    _i6.Color? completedTabColor,
    _i6.Color? featureLabelColor,
    _i6.Color? bugLabelColor,
    _i6.Color? fade,
    _i6.Color? fabColor,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #copyWith,
          [],
          {
            #primaryBackgroundColor: primaryBackgroundColor,
            #secondaryBackgroundColor: secondaryBackgroundColor,
            #thirdBackgroundColor: thirdBackgroundColor,
            #bottomSheetBackgroundColor: bottomSheetBackgroundColor,
            #fontFamily: fontFamily,
            #primaryTextColor: primaryTextColor,
            #secondaryTextColor: secondaryTextColor,
            #primaryIconColor: primaryIconColor,
            #secondaryIconColor: secondaryIconColor,
            #actionColor: actionColor,
            #actionPressedColor: actionPressedColor,
            #actionBackgroundColor: actionBackgroundColor,
            #dividerColor: dividerColor,
            #dialogBarrierColor: dialogBarrierColor,
            #elevatedButtonColor: elevatedButtonColor,
            #pressedElevatedButtonColor: pressedElevatedButtonColor,
            #elevatedButtonTextColor: elevatedButtonTextColor,
            #focusedTextButtonColor: focusedTextButtonColor,
            #focusedTextColor: focusedTextColor,
            #focusedTextFieldBorderlineColor: focusedTextFieldBorderlineColor,
            #focusedTonalButtonColor: focusedTonalButtonColor,
            #enabledTextColor: enabledTextColor,
            #disabledTextColor: disabledTextColor,
            #disabledTextButtonColor: disabledTextButtonColor,
            #tonalButtonColor: tonalButtonColor,
            #errorColor: errorColor,
            #upvoteArrowColor: upvoteArrowColor,
            #activatedUpvoteArrowColor: activatedUpvoteArrowColor,
            #requestsTabColor: requestsTabColor,
            #inProgressTabColor: inProgressTabColor,
            #completedTabColor: completedTabColor,
            #featureLabelColor: featureLabelColor,
            #bugLabelColor: bugLabelColor,
            #fade: fade,
            #fabColor: fabColor,
          },
        ),
        returnValue: _FakeSuggestionsTheme_6(
          this,
          Invocation.method(
            #copyWith,
            [],
            {
              #primaryBackgroundColor: primaryBackgroundColor,
              #secondaryBackgroundColor: secondaryBackgroundColor,
              #thirdBackgroundColor: thirdBackgroundColor,
              #bottomSheetBackgroundColor: bottomSheetBackgroundColor,
              #fontFamily: fontFamily,
              #primaryTextColor: primaryTextColor,
              #secondaryTextColor: secondaryTextColor,
              #primaryIconColor: primaryIconColor,
              #secondaryIconColor: secondaryIconColor,
              #actionColor: actionColor,
              #actionPressedColor: actionPressedColor,
              #actionBackgroundColor: actionBackgroundColor,
              #dividerColor: dividerColor,
              #dialogBarrierColor: dialogBarrierColor,
              #elevatedButtonColor: elevatedButtonColor,
              #pressedElevatedButtonColor: pressedElevatedButtonColor,
              #elevatedButtonTextColor: elevatedButtonTextColor,
              #focusedTextButtonColor: focusedTextButtonColor,
              #focusedTextColor: focusedTextColor,
              #focusedTextFieldBorderlineColor: focusedTextFieldBorderlineColor,
              #focusedTonalButtonColor: focusedTonalButtonColor,
              #enabledTextColor: enabledTextColor,
              #disabledTextColor: disabledTextColor,
              #disabledTextButtonColor: disabledTextButtonColor,
              #tonalButtonColor: tonalButtonColor,
              #errorColor: errorColor,
              #upvoteArrowColor: upvoteArrowColor,
              #activatedUpvoteArrowColor: activatedUpvoteArrowColor,
              #requestsTabColor: requestsTabColor,
              #inProgressTabColor: inProgressTabColor,
              #completedTabColor: completedTabColor,
              #featureLabelColor: featureLabelColor,
              #bugLabelColor: bugLabelColor,
              #fade: fade,
              #fabColor: fabColor,
            },
          ),
        ),
      ) as _i8.SuggestionsTheme);
}
